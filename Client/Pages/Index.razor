@page "/"

@inject HttpClient Http
@inject IWebAssemblyHostEnvironment HostEnvironment
@inject NavigationManager NavManager
@inject ILocalStorageService LocalStorage

<h1>Hello, world!</h1>
@if (identity == null)
{

<button class="btn btn-primary" @onclick="LogIn">Login</button>

}
else
{
<button class="btn btn-primary" @onclick="LogOut">LogOut</button>

}

@code {

    private ClientIdentity identity;

    protected override async Task OnInitializedAsync()
    {

        identity = await LocalStorage.GetItemAsync<ClientIdentity>("User");
        if (identity == null && HostEnvironment.IsProduction())
        {
            identity = await Http.GetFromJsonAsync<ClientIdentity>(".auth/me");
            if (identity != null)
            {
                await LocalStorage.SetItemAsync("User", identity);
            }
        }

    }

    private async Task LogIn()
    {
        if (HostEnvironment.IsDevelopment())
        {
            identity = new ClientIdentity()
            {
                UserDetails = "drew@killion.me",
                UserRoles = new []{"anonymous","authenticated"},
                UserId = Guid.NewGuid().ToString(),
                IdentityProvider = "google"
            };
            await LocalStorage.SetItemAsync("User", identity);
        }
        else
        {
            NavManager.NavigateTo(".auth/login/google");
        }
    }

    private async Task LogOut()
    {
        if (HostEnvironment.IsProduction())
        {
            NavManager.NavigateTo(".auth/logout");
        }

        identity = null;
        await LocalStorage.RemoveItemAsync("User");
    }

}